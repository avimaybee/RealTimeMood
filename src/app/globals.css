
@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    /* Base mood color components - to be updated by JS */
    --mood-hue: 210; /* Default: Calm Blue */
    --mood-saturation: 100%;
    --mood-lightness: 60%; /* Brighter default */
    --mood-saturation-value: 100; /* Numeric value for calcs */
    --mood-lightness-value: 60;  /* Numeric value for calcs */


    /* Derived HSL value strings */
    --background-hsl: var(--mood-hue) var(--mood-saturation) var(--mood-lightness);
    
    /* Accent/Primary: shifted 30deg left for UI elements */
    --primary-hue: calc((var(--mood-hue) - 30 + 360) % 360);
    --primary-saturation: var(--mood-saturation);
    --primary-lightness: calc(var(--mood-lightness) * 0.9); /* Slightly darker/more saturated for UI */
    --primary-hsl: var(--primary-hue) var(--primary-saturation) var(--primary-lightness);
    
    /* Foreground (text) colors based on background lightness - defaults, JS will refine these HSL values */
    --foreground-light-hsl: 204 10% 10%; /* Off-black: HSL values for hsl(204, 10%, 10%) -> #1F1F1F */
    --foreground-dark-hsl: 200 0% 91.8%; /* Off-white: HSL values for hsl(200, 0%, 91.8%) -> #EAEAEA */
    --foreground-hsl: var(--foreground-light-hsl); /* Default to dark text HSL values. JS updates this variable. */

    --primary-foreground-hsl: var(--foreground-dark-hsl); /* Default to light text on primary HSL values. JS updates this. */

    /* Variables for Tailwind's hsl(var(...)) consumption - these store HSL VALUES, not hsl() strings */
    --background: var(--background-hsl);
    --foreground: var(--foreground-hsl);
    --primary: var(--primary-hsl);
    --primary-foreground: var(--primary-foreground-hsl);

    /* UI Panel specific backgrounds */
    --panel-bg-light-rgba: 255, 255, 255; /* r, g, b values for rgba() */
    --panel-bg-dark-rgba: 0, 0, 0; /* r, g, b values for rgba() */
    --panel-bg-alpha: 0.08;
    /* Default to light panel, JS will update based on background */
    --panel-background-rgba: var(--panel-bg-light-rgba); /* This stores "r, g, b" string. JS updates this. */
    /* --panel-background is used directly in .frosted-glass, not by Tailwind's hsl() */

    /* Standard shadcn variables, derived or static */
    --card-hsl: var(--mood-hue) var(--mood-saturation) calc(var(--mood-lightness) + 5%); 
    --card: var(--card-hsl); /* HSL VALUES */
    --card-foreground: var(--foreground-hsl); /* HSL VALUES */
    
    --popover-hsl: var(--card-hsl);
    --popover: var(--popover-hsl); /* HSL VALUES */
    --popover-foreground: var(--foreground-hsl); /* HSL VALUES */
    
    --secondary-hsl: calc((var(--mood-hue) + 15 + 360) % 360) var(--mood-saturation) calc(var(--mood-lightness) - 5%);
    --secondary: var(--secondary-hsl); /* HSL VALUES */
    --secondary-foreground: var(--foreground-hsl); /* HSL VALUES */

    --muted-hsl: var(--mood-hue) calc(var(--mood-saturation) * 0.8) calc(var(--mood-lightness) + 10%);
    --muted: var(--muted-hsl); /* HSL VALUES */
    --muted-foreground-hsl: var(--mood-hue) calc(var(--mood-saturation) * 0.7) calc(var(--mood-lightness) - 20%);
    --muted-foreground: var(--muted-foreground-hsl); /* HSL VALUES */
    
    --accent-hsl: var(--primary-hsl); 
    --accent: var(--accent-hsl); /* HSL VALUES */
    --accent-foreground: var(--primary-foreground-hsl); /* HSL VALUES */

    --destructive: 0 84.2% 60.2%; /* Direct HSL VALUES */
    --destructive-foreground: 0 0% 98%; /* Direct HSL VALUES */

    --border-hsl: var(--mood-hue) var(--mood-saturation) calc(var(--mood-lightness) - 10%);
    --border: var(--border-hsl); /* HSL VALUES */
    --input-hsl: var(--mood-hue) var(--mood-saturation) calc(var(--mood-lightness) - 15%);
    --input: var(--input-hsl); /* HSL VALUES */
    --ring-hsl: var(--primary-hsl);
    --ring: var(--ring-hsl); /* HSL VALUES */
    
    --radius: 1rem; /* 16px, for "generous border-radius (e.g., 16px to 24px)" */

    --chart-1: 12 76% 61%;
    --chart-2: 173 58% 39%;
    --chart-3: 197 37% 24%;
    --chart-4: 43 74% 66%;
    --chart-5: 27 87% 67%;
  }
}

@layer base {
  html, body, #__next {
    height: 100%;
    margin: 0;
    padding: 0;
    /* overflow: hidden has been removed to allow scrolling on history page */
  }
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground font-sans;
    /* CSS Transitions for background-color and color are removed here. 
       Smooth color changes are now handled by JavaScript LERPing 
       of --mood-hue, --mood-saturation, --mood-lightness, and HSL components of --foreground-hsl and --primary-foreground-hsl. */
  }
  
  /* Apply platform-specific fonts */
  body.ios {
    @apply font-sans-ios;
  }
  body.android {
    @apply font-sans-android;
  }
}

@layer utilities {
  .text-shadow-pop {
    text-shadow: 0 0 15px hsla(var(--primary-foreground-hsl), 0.5);
  }
  
  .frosted-glass {
    /* JS updates --panel-background-rgba and --panel-bg-alpha if needed */
    background-color: rgba(var(--panel-background-rgba), var(--panel-bg-alpha));
    @apply backdrop-blur-md;
  }

  .content-auto {
    content: ""; /* for pseudo-elements */
  }

  /* For vignette effect */
  .vignette-overlay {
    position: fixed;
    inset: 0;
    background: radial-gradient(ellipse at center, rgba(0,0,0,0) 50%, rgba(0,0,0,0.15) 100%);
    pointer-events: none;
    z-index: 1; /* Above background, below particles */
  }

  /* For noise texture */
  .noise-overlay {
    position: fixed;
    inset: 0;
    background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.65' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)'/%3E%3C/svg%3E");
    opacity: 0.04; /* Subtle noise */
    pointer-events: none;
    z-index: 1; /* Same level as vignette or just above */
  }

  .interactive-glow {
    @apply transition-all duration-300;
  }
  .interactive-glow:hover,
  .interactive-glow:focus-visible {
    filter: drop-shadow(0 0 6px hsl(var(--primary)));
    transform: scale(1.1);
  }

  /* When the radial bloom is active, fade out the main UI elements */
  .radial-bloom-active-page > header,
  .radial-bloom-active-page > main,
  .radial-bloom-active-page > footer {
    transition: opacity 0.4s ease-in-out;
    opacity: 0.2;
    pointer-events: none;
  }

  /* When the footer menu is active, recede the page content (Android/Default) */
  .menu-open-recede-children > header,
  .menu-open-recede-children > main,
  .menu-open-recede-children > [data-orb-button-container] {
    transition: opacity 0.4s ease-in-out, filter 0.4s ease-in-out, transform 0.4s ease-in-out;
    opacity: 0.2;
    filter: blur(8px);
    transform: scale(0.95);
    pointer-events: none;
  }

  /* More pronounced effect for iOS */
  .ios-menu-open-recede-children > header,
  .ios-menu-open-recede-children > main,
  .ios-menu-open-recede-children > [data-orb-button-container] {
    transition: opacity 0.5s ease-in-out, filter 0.5s ease-in-out, transform 0.5s ease-in-out;
    opacity: 0.1;
    filter: blur(16px);
    transform: scale(0.92);
    pointer-events: none;
  }

  /* When the gradient bar is active, recede the page content */
  .bar-mode-active-page > header,
  .bar-mode-active-page > main,
  .bar-mode-active-page > footer {
    transition: opacity 0.4s ease-in-out, filter 0.4s ease-in-out;
    opacity: 0.2;
    filter: blur(8px);
    pointer-events: none;
  }
  
  /* When Ambient Mode is active, fade out all UI */
  .ambient-mode-active-page > header,
  .ambient-mode-active-page > main,
  .ambient-mode-active-page > footer,
  .ambient-mode-active-page > [data-orb-button-container] {
    transition: opacity 1s ease-in-out;
    opacity: 0;
    pointer-events: none;
  }

  /* New class to prevent scrolling and text selection during drag interactions */
  .no-scroll-select {
    overflow: hidden !important;
    -webkit-user-select: none; /* Safari */
    -moz-user-select: none; /* Firefox */
    -ms-user-select: none; /* IE10+/Edge */
    user-select: none; /* Standard */
  }


  @keyframes logo-calm {
    0%, 100% { transform: scale(1); }
    50% { transform: scale(1.02); }
  }
  @keyframes logo-joyful {
    0%, 100% { transform: translateY(0) scale(1); }
    50% { transform: translateY(-1px) scale(1.05); }
  }
  @keyframes logo-anxious {
    0%, 100% { transform: translate(0, 0) scale(1); }
    10% { transform: translate(-1px, 1px) scale(1.01); }
    30% { transform: translate(1px, -1px) scale(0.99); }
    50% { transform: translate(-1px, -1px) scale(1.02); }
    70% { transform: translate(1px, 1px) scale(1); }
    90% { transform: translate(0, 0) scale(0.98); }
  }
  
  /* Platform-specific scrollbar styling */
  .ios ::-webkit-scrollbar {
    width: 5px;
    height: 5px;
  }
  .ios ::-webkit-scrollbar-track {
    background: transparent;
  }
  .ios ::-webkit-scrollbar-thumb {
    background-color: rgba(0, 0, 0, 0.2);
    border-radius: 10px;
    border: 1px solid transparent;
    background-clip: content-box;
  }
  .dark .ios ::-webkit-scrollbar-thumb {
    background-color: rgba(255, 255, 255, 0.2);
  }

  .android ::-webkit-scrollbar {
    width: 8px;
  }
  .android ::-webkit-scrollbar-track {
    background: transparent;
  }
  .android ::-webkit-scrollbar-thumb {
    background-color: hsla(var(--foreground-hsl), 0.3);
    border-radius: 10px;
  }
  .android ::-webkit-scrollbar-thumb:hover {
    background-color: hsla(var(--foreground-hsl), 0.5);
  }
}
