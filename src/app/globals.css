
@tailwind base;
@tailwind components;
@tailwind utilities;

body {
  font-family: var(--font-inter), sans-serif;
}

@layer base {
  :root {
    /* Base mood color components - to be updated by JS */
    --mood-hue: 210; /* Default: Calm Blue */
    --mood-saturation: 100%;
    --mood-lightness: 60%; /* Brighter default */

    /* Derived colors */
    --background-hsl: var(--mood-hue) var(--mood-saturation) var(--mood-lightness);
    --background: hsl(var(--background-hsl));
    
    /* Accent/Primary: shifted 30deg left for UI elements */
    --primary-hue: calc((var(--mood-hue) - 30 + 360) % 360);
    --primary-saturation: var(--mood-saturation);
    --primary-lightness: calc(var(--mood-lightness) * 0.9); /* Slightly darker/more saturated for UI */
    --primary-hsl: var(--primary-hue) var(--primary-saturation) var(--primary-lightness);
    --primary: hsl(var(--primary-hsl));
    
    /* Foreground (text) colors based on background lightness - defaults, JS will refine */
    --foreground-light: 204 10% 10%; /* Off-black: hsl(204, 10%, 10%) -> #1A1C1E */
    --foreground-dark: 200 0% 91.8%; /* Off-white: hsl(200, 0%, 91.8%) -> #EAEAEA */
    --foreground-hsl: var(--foreground-light); /* Default to dark text */
    --foreground: hsl(var(--foreground-hsl));

    --primary-foreground-hsl: var(--foreground-dark); /* Default to light text on primary */
    --primary-foreground: hsl(var(--primary-foreground-hsl));

    /* UI Panel specific backgrounds */
    --panel-bg-light-rgba: 255, 255, 255;
    --panel-bg-dark-rgba: 0, 0, 0;
    --panel-bg-alpha: 0.08;
    /* Default to light panel, JS will update based on background */
    --panel-background-rgba: var(--panel-bg-light-rgba);
    --panel-background: rgba(var(--panel-background-rgba), var(--panel-bg-alpha));

    /* Standard shadcn variables, derived or static */
    --card-hsl: var(--mood-hue) var(--mood-saturation) calc(var(--mood-lightness) + 5%); 
    --card: hsl(var(--card-hsl));
    --card-foreground: hsl(var(--foreground-hsl));
    
    --popover-hsl: var(--card-hsl);
    --popover: hsl(var(--popover-hsl));
    --popover-foreground: hsl(var(--foreground-hsl));
    
    --secondary-hsl: calc((var(--mood-hue) + 15 + 360) % 360) var(--mood-saturation) calc(var(--mood-lightness) - 5%);
    --secondary: hsl(var(--secondary-hsl));
    --secondary-foreground: hsl(var(--foreground-hsl));

    --muted-hsl: var(--mood-hue) calc(var(--mood-saturation) * 0.8) calc(var(--mood-lightness) + 10%);
    --muted: hsl(var(--muted-hsl));
    --muted-foreground-hsl: var(--mood-hue) calc(var(--mood-saturation) * 0.7) calc(var(--mood-lightness) - 20%);
    --muted-foreground: hsl(var(--muted-foreground-hsl));
    
    --accent-hsl: var(--primary-hsl); 
    --accent: hsl(var(--accent-hsl));
    --accent-foreground-hsl: var(--primary-foreground-hsl);
    --accent-foreground: hsl(var(--accent-foreground-hsl));

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 98%;

    --border-hsl: var(--mood-hue) var(--mood-saturation) calc(var(--mood-lightness) - 10%);
    --border: hsl(var(--border-hsl));
    --input-hsl: var(--mood-hue) var(--mood-saturation) calc(var(--mood-lightness) - 15%);
    --input: hsl(var(--input-hsl));
    --ring-hsl: var(--primary-hsl);
    --ring: hsl(var(--ring-hsl));
    
    --radius: 1rem; /* 16px, for "generous border-radius (e.g., 16px to 24px)" */

    --chart-1: 12 76% 61%;
    --chart-2: 173 58% 39%;
    --chart-3: 197 37% 24%;
    --chart-4: 43 74% 66%;
    --chart-5: 27 87% 67%;
  }
}

@layer base {
  html, body, #__next {
    height: 100%;
    margin: 0;
    padding: 0;
    overflow: hidden; /* Prevent scrollbars for full screen design */
  }
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
    transition: background-color 0.5s ease-in-out, color 0.5s ease-in-out;
  }
}

@layer utilities {
  .text-shadow-pop {
    text-shadow: 0px 4px 12px rgba(0, 0, 0, 0.4);
  }
  
  .frosted-glass {
    background-color: var(--panel-background);
    @apply backdrop-blur-2xl; /* Using 2xl for significant blur as per spec (24px) */
  }

  .content-auto {
    content: ""; /* for pseudo-elements */
  }

  /* For vignette effect */
  .vignette-overlay {
    position: fixed;
    inset: 0;
    background: radial-gradient(ellipse at center, rgba(0,0,0,0) 50%, rgba(0,0,0,0.15) 100%);
    pointer-events: none;
    z-index: 1; /* Above background, below particles */
  }

  /* For noise texture */
  .noise-overlay {
    position: fixed;
    inset: 0;
    background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.65' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)'/%3E%3C/svg%3E");
    opacity: 0.04; /* Subtle noise */
    pointer-events: none;
    z-index: 1; /* Same level as vignette or just above */
  }
}
