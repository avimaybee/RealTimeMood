rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // PUBLIC: Collective Mood State
    // Anyone authenticated can read.
    // Writes are handled by a transaction and can be made by any authenticated user.
    match /appState/collectiveMood {
      allow read: if true; // Allow public read access
      allow write: if true; // Allow public write access for collective mood updates
    }

    // PUBLIC: Historical Snapshots
    // Anyone can read the historical mood snapshots.
    match /moodSnapshots/{snapshotId} {
      allow read: if true;
    }

    // PUBLIC: Community Quotes
    // Anyone can read and write to the community quotes collection.
    // Writes are validated in the component to ensure they are well-formed.
    match /communityQuotes/{quoteId} {
      allow read: if true;
      allow create: if request.auth != null && request.resource.data.authorId == request.auth.uid;
      allow update: if request.auth != null && request.resource.data.diff(request.resource.data).affectedKeys().hasOnly(['likes']);
      allow update: if request.auth != null && request.resource.data.authorId == request.auth.uid;
    }

    // PUBLIC: User Activity (for heartbeat)
    // Users can only write to their own activity document.
    match /userActivity/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // PUBLIC: Who's Typing Indicator
    // Users can read all typing indicators.
    // Users can only write to their own typing indicator document.
    match /typingUsers/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // PRIVATE: User's personal mood history
    // Users can only read and write their own history.
    match /userMoodHistory/{userId}/{document=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // PRIVATE: User's profile (for streak)
    // Users can only read and write their own profile.
    match /userProfiles/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Default deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}