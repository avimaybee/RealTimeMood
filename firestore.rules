rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- App State ---
    // Collective mood is world-readable. It can be updated by any authenticated
    // user via the `submitMood` server action, which contains the business logic.
    match /appState/collectiveMood {
      allow read: if true;
      allow write: if request.auth != null; // Allow transactions from authenticated users.
    }

    // --- User Activity ---
    // Anyone can see who is active, but users can only update their own heartbeat.
    match /userActivity/{userId} {
      allow read: if true;
      allow write: if request.auth.uid == userId;
    }

    // --- Typing Indicators ---
    // Anyone can see who is typing. Users can only create/delete their own indicator.
    match /typingUsers/{userId} {
      allow read: if true;
      allow create, delete: if request.auth.uid == userId;
      allow update: if false; // No updates allowed, only create/delete.
    }

    // --- Mood Snapshots (History) ---
    // Snapshots are world-readable, but only writable from a trusted server process.
    match /moodSnapshots/{snapshotId} {
      allow read: if true;
      allow write: if false; // Protects against direct client writes.
    }

    // --- Community Quotes (Thoughts) ---
    match /communityQuotes/{quoteId} {
      allow read: if true;

      // Any authenticated user can create a quote.
      allow create: if request.auth != null;

      // Any authenticated user can update a quote, but ONLY to modify the 'likes' count.
      // This prevents users from editing the text or other fields of a submitted quote.
      allow update: if request.auth != null
                    && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['likes']);
    }

    // --- User-Specific Data ---
    // Users can only access their own history and profile data.
    match /userMoodHistory/{userId}/{document=**} {
      allow read, write: if request.auth.uid == userId;
    }

    match /userProfiles/{userId} {
      allow read, write: if request.auth.uid == userId;
    }
  }
}
