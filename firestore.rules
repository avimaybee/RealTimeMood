
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // --- Collective Mood State ---
    // Anyone can read the global state.
    // Writes are handled by a server-side transaction for data integrity.
    match /appState/collectiveMood {
      allow read: if true;
      allow write: if request.auth != null; // Allows any signed-in user (including anonymous)
    }

    // --- User-Specific Data ---
    // Users can only access their own history and profile data.
    match /userMoodHistory/{userId}/{document=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    match /userProfiles/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // --- Community Thoughts ---
    // Anyone can read thoughts.
    // Authenticated (including anonymous) users can create new thoughts.
    // Users can only update the 'likes' field of a thought.
    match /communityQuotes/{quoteId} {
      allow read: if true;
      // Allow creation if the user is authenticated and the authorId matches their own UID.
      allow create: if request.auth != null && request.resource.data.authorId == request.auth.uid;
      // Allow users to update ONLY the 'likes' field.
      allow update: if request.auth != null && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['likes']);
    }

    // --- Typing Indicator ---
    // Users can only create/delete their own typing status document.
    // Anyone can read who is typing.
    match /typingUsers/{userId} {
        allow read: if true;
        allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Default deny all other access for safety.
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
